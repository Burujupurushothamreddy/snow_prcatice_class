create or replace database demo_db;
USE DEMO_DB;
USE ROLE ACCOUNTADMIN;


-- Prepare table --
create or replace table customers(
  id number,
  full_name varchar, 
  email varchar,
  phone varchar,
  spent number,
  create_date DATE DEFAULT CURRENT_DATE);

-- insert values in table --
insert into customers (id, full_name, email,phone,spent)
values
  (1,'Lewiss MacDwyer','lmacdwyer0@un.org','262-665-9168',140),
  (2,'Ty Pettingall','tpettingall1@mayoclinic.com','734-987-7120',254),
  (3,'Marlee Spadazzi','mspadazzi2@txnews.com','867-946-3659',120),
  (4,'Heywood Tearney','htearney3@patch.com','563-853-8192',1230),
  (5,'Odilia Seti','oseti4@globo.com','730-451-8637',143),
  (6,'Meggie Washtell','mwashtell5@rediff.com','568-896-6138',600);

select * from customers;

-- set up roles
CREATE OR REPLACE ROLE ANALYST_MASKED;
CREATE OR REPLACE ROLE ANALYST_FULL;

GRANT USAGE ON DATABASE DEMO_DB TO ROLE ANALYST_MASKED;
GRANT USAGE ON DATABASE DEMO_DB TO ROLE ANALYST_FULL;

-- grant select on table to roles
GRANT SELECT ON TABLE DEMO_DB.PUBLIC.CUSTOMERS TO ROLE ANALYST_MASKED;
GRANT SELECT ON TABLE DEMO_DB.PUBLIC.CUSTOMERS TO ROLE ANALYST_FULL;

GRANT USAGE ON SCHEMA DEMO_DB.PUBLIC TO ROLE ANALYST_MASKED;
GRANT USAGE ON SCHEMA DEMO_DB.PUBLIC TO ROLE ANALYST_FULL;

-- grant warehouse access to roles
GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE ANALYST_MASKED;
GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE ANALYST_FULL;


-- assign roles to a user
GRANT ROLE ANALYST_MASKED TO USER PURUSHOTHAMREDDY;
GRANT ROLE ANALYST_FULL TO USER PURUSHOTHAMREDDY;


select current_user();
-- Set up masking policy

create or replace masking policy phone 
    as (val varchar) returns varchar ->
            case        
            when current_role() in ('ANALYST_FULL', 'ACCOUNTADMIN') then val
            else '##-###-##'
            end;
  

-- Apply policy on a specific column 
ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN phone 
SET MASKING POLICY PHONE;


create or replace masking policy email_policy 
    as (val varchar) returns varchar ->
            case        
            when current_role() in ('ANALYST_FULL', 'ACCOUNTADMIN') then val
            else '****-****-***'
            end;
            
ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN email 
SET MASKING POLICY email_policy;

-- Validating policies

USE ROLE ANALYST_FULL;
SELECT * FROM CUSTOMERS;

USE ROLE ANALYST_MASKED;
SELECT * FROM CUSTOMERS;



-- replace policy
create or replace masking policy names as (val varchar) returns varchar ->
            case
            when current_role() in ('ANALYST_FULL', 'ACCOUNTADMIN') then val
            else CONCAT(left(val,2),'*******')
            end;

ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN full_name 
SET MASKING POLICY names;


ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN full_name 
unset MASKING POLICY;

ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN phone 
unset MASKING POLICY;

ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN email 
unset MASKING POLICY;


---assignment-
create or replace masking policy name as (val varchar) returns varchar ->
            case
            when current_role() in ('ANALYST_FULL', 'ACCOUNTADMIN') then val
            else CONCAT('*******',right(val,2))
            end;

ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN full_name 
SET MASKING POLICY name;

ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN full_name 
unset MASKING POLICY;

-- Validating policies  '*******'

USE ROLE ANALYST_FULL;
SELECT * FROM CUSTOMERS;

USE ROLE ANALYST_MASKED;
SELECT * FROM CUSTOMERS;

show databases;

-----own practice-------
create or replace database demo_db;

use role accountadmin;

create or replace table employee(
id varchar,
fname varchar,
addr varchar,
email varchar,
phone varchar
);

select * from employee;

insert into employee values(1,'bpr','bang','purushothamreddy@gmail.com',7093252952),
                           (2,'raja','kolkatha','rajareddy@gmail.com',96523332979),
                           (3,'sarada','hyderbad','sarada@gmail.com',7843163887),
                           (4,'bhaavani','mumbai','bhaavani@gmail.com',9908169793),
                           (5,'naga','ranchi','nagareddy@gmail.com',9876543210);

create or replace role Bpr_masking;
create or replace role Bpr_full;

grant usage on database demo_db to role Bpr_masking; 
grant usage on database demo_db to role Bpr_full; 

grant select on table demo_db.public.employee to role Bpr_masking;
grant select on table demo_db.public.employee to role Bpr_full;

grant usage on schema demo_db.public to role Bpr_masking;
grant usage on schema demo_db.public to role  Bpr_full;

grant usage on warehouse compute_wh to role  Bpr_masking;
grant usage on warehouse compute_wh to role Bpr_full;

grant role Bpr_masking to user PURUSHOTHAMREDDY ;
grant role  Bpr_full to user PURUSHOTHAMREDDY ;

select current_user();

CREATE or replace MASKING POLICY name
AS (val STRING) 
RETURNS STRING ->
CASE
    WHEN CURRENT_ROLE() IN ('BPR_FULL', 'ACCOUNTADMIN') THEN val
    ELSE 'XXX-XX-XXXX'
END;

 ALTER TABLE IF EXISTS employee MODIFY COLUMN fname 
SET MASKING POLICY name;

ALTER TABLE IF EXISTS employee MODIFY COLUMN fname 
unSET MASKING POLICY;

use role bpr_full;
select * from employee;

use role bpr_masking;
select * from employee;

CREATE or replace MASKING POLICY Phone_no
AS (val STRING) 
RETURNS STRING ->
CASE
    WHEN CURRENT_ROLE() IN ('BPR_FULL', 'ACCOUNTADMIN') THEN val
    ELSE concat(left(val, 2),'****')
END;


 ALTER TABLE IF EXISTS employee MODIFY COLUMN phone 
SET MASKING POLICY phone_no;

ALTER TABLE IF EXISTS employee MODIFY COLUMN phone 
unSET MASKING POLICY;

CREATE or replace MASKING POLICY Phone_no
AS (val STRING) 
RETURNS STRING ->
CASE
    WHEN CURRENT_ROLE() IN ('BPR_FULL', 'ACCOUNTADMIN') THEN val
    ELSE concat('*****',right(val, 2))
END;